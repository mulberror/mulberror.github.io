[{"categories":["建站"],"content":" 1 PrefaceContinuing from the previous section, after roughly completing the setup of the DoIt blog, I deployed the blog using Vercel. Vercel supports a Live mode that allows website owners to make real-time modifications, and any website accessed through Vercel will automatically enter this mode. ","date":"2024-10-27","objectID":"/little-problem-in-vercellive-mode/:1:0","series":["小站重生记"],"tags":["Vercel","博客","Cookie"],"title":"DoIt 主题在 Vercel Live 模式下遇到的加载问题","uri":"/little-problem-in-vercellive-mode/#1-preface"},{"categories":["建站"],"content":" 2 Problems Encountered Some JS files failed to load As shown in the image, the animation for loading the blog title on the left and the opening of the search bar on the right require loading JS files, but neither of these components loaded successfully. Moreover, it was even stranger that when accessing the blog through the Vercel deployment link (in the format of xxx.vercel.app), everything loaded correctly, which left me puzzled. I would like to especially thank my good roommate MLAcookie for helping me find a solution. Initially, we thought this might be a CDN caching issue. However, when MLAcookie and another roommate accessed the blog using the same environment, they successfully loaded everything. After checking the requested files, we found that the browser had indeed requested the corresponding JS files. JS files requested locally Thus, we could rule out CDN caching as the problem, and our next target was to identify where the loading process locally was failing. ","date":"2024-10-27","objectID":"/little-problem-in-vercellive-mode/:2:0","series":["小站重生记"],"tags":["Vercel","博客","Cookie"],"title":"DoIt 主题在 Vercel Live 模式下遇到的加载问题","uri":"/little-problem-in-vercellive-mode/#2-problems-encountered"},{"categories":["建站"],"content":" 3 Local DebuggingMy roommate and I first compared the requested files and noticed significant differences. After several rounds of comparison and rejecting specific file requests, we found that the extra files were mainly being called by rocket-loader.js, specifically from a request in feedback.js. By inspecting the webpage files in the console, we discovered that the local loading threw an exception in liveload.js. After gradually running through the code, we identified that the error ultimately stemmed from the vercel-live module, leading to a mysterious stack overflow error due to repeated calls in the local stack space. However, due to my lack of knowledge in this area, I couldn’t fully understand the underlying principles. Exception thrown during local rendering Thus, we could roughly determine that the issue was a mysterious problem in Vercel Live mode locally, causing the page to fail to render correctly. ","date":"2024-10-27","objectID":"/little-problem-in-vercellive-mode/:3:0","series":["小站重生记"],"tags":["Vercel","博客","Cookie"],"title":"DoIt 主题在 Vercel Live 模式下遇到的加载问题","uri":"/little-problem-in-vercellive-mode/#3-local-debugging"},{"categories":["建站"],"content":" 4 Final ResolutionI switched to a completely new computer and accessed the blog directly instead of through Vercel, and the above issue was resolved. Returning to my original computer, I attempted to log out of Vercel to see if that would solve the problem. Unfortunately, the JS still failed to load, and the Vercel Live comment buttons remained hovering on the page, as I was still accessing the page through that mode. Checking the local cookie situation, I found that even when logged out, the deployed project still recognized and activated Live mode through local cookies. Deployed project activates Vercel Live mode through local cookies However, I found it impossible to directly block the use of this cookie to resolve the issue; the theme still failed to load due to the thrown exception. Directly blocking the cookie leads to errors The dark-light toggle part of the theme needs to read data from the cookie. Directly blocking the cookie causes the check in line 16 of the code to fail, leading to errors because it cannot read localStorage. ","date":"2024-10-27","objectID":"/little-problem-in-vercellive-mode/:4:0","series":["小站重生记"],"tags":["Vercel","博客","Cookie"],"title":"DoIt 主题在 Vercel Live 模式下遇到的加载问题","uri":"/little-problem-in-vercellive-mode/#4-final-resolution"},{"categories":["建站"],"content":" 5 SolutionIf you encounter this problem, you can resolve it by deleting the cookies for this site. This method needs to be implemented each time you access the blog through Vercel, which, while not problematic, is quite cumbersome. Delete the cookies for this site Vercel’s functionality is already robust and stable, so once you import your project from GitHub, you can typically proceed without needing to interact with Vercel further. If you want to avoid this cumbersome method, I recommend accessing the blog directly through its domain instead of going through Vercel. OvO ","date":"2024-10-27","objectID":"/little-problem-in-vercellive-mode/:5:0","series":["小站重生记"],"tags":["Vercel","博客","Cookie"],"title":"DoIt 主题在 Vercel Live 模式下遇到的加载问题","uri":"/little-problem-in-vercellive-mode/#5-solution"},{"categories":null,"content":" [!TIP] 本站的文章可能会有中文版或者英文版两个版本，可以按照需求进行选择。 不过疏于本人英语水平有限，所以一部分文章会采用 DeepL 或者其他翻译工具的帮助，以及我会标注出个人书写的英文版文章。 如果非中文文章中有语法错误或者更加好的书写方式，方便在文章的评论区进行留言:)。 ","date":"2024-10-24","objectID":"/about/:0:0","series":null,"tags":null,"title":"关于","uri":"/about/#"},{"categories":["建站"],"content":" 1 前言我之前也是用 Hugo 框架搭建的博客，使用的主题是 PaperMod。 不过因为大部分存货都丢失了，再加上碰巧见看到了 ryan4yin 大佬的博客，从而了解到了 HEIGE-PCloud 大佬制作的 DoIt 主题。 DoIt 主题非常符合我一开始预想的博客样式，所以就直接花了一段时间进行了个人博客的重建，并且在这个期间还花了一点时间从零学了点前端知识，简单地写了一个简陋的个人主页 My Little World。 ","date":"2024-10-22","objectID":"/rebuild-my-blog/:1:0","series":["小站重生记"],"tags":["hugo","vercel","博客"],"title":"用 Hugo + Vercel 重建博客","uri":"/rebuild-my-blog/#1-前言"},{"categories":["建站"],"content":" 2 相关版本信息 Hugo: v0.136.4 DoIt: 0.4.X ","date":"2024-10-22","objectID":"/rebuild-my-blog/:2:0","series":["小站重生记"],"tags":["hugo","vercel","博客"],"title":"用 Hugo + Vercel 重建博客","uri":"/rebuild-my-blog/#2-相关版本信息"},{"categories":["建站"],"content":" 2 Hugo + Gitpage","date":"2024-10-22","objectID":"/rebuild-my-blog/:3:0","series":["小站重生记"],"tags":["hugo","vercel","博客"],"title":"用 Hugo + Vercel 重建博客","uri":"/rebuild-my-blog/#2-hugo--gitpage"},{"categories":["建站"],"content":" 2.1 本地配置这个部分对于每个 Hugo 用户应该都比较熟练，在这里简单记录一下。 首先就是安装 Go 和 Hugo，根据官方文档配置即可 Hugo Document。 安装好依赖后，就可以进行本地博客相关的配置了。 我选择的是 DoIt 主题，直接就参考了作者编写的文档 主题文档 - 基本概念。 不过因为作者的文档适用 DoIt 0.2.X 的版本，所以在写这篇文章的时候，也就是我配置博客时还是遇到少许问题。 ","date":"2024-10-22","objectID":"/rebuild-my-blog/:3:1","series":["小站重生记"],"tags":["hugo","vercel","博客"],"title":"用 Hugo + Vercel 重建博客","uri":"/rebuild-my-blog/#21-本地配置"},{"categories":["建站"],"content":" 2.2 部署 Gitpage这部分主要依据 Hugo 官方文档中的配置教程 Host on GitHub Pages。 我之前尝试了三个主题的配置，如果单纯的将 hugo server 生成的 \\public 静态资源直接推到 github 仓库中，最后渲染出来的静态页面多少渲染都会出问题，因此还是采取官方文档的部署方法。 根据官方配置的方法，一般只需要注意将 .github/workflows/hugo.yaml 中的 branch 信息以及 HUGO_VERSION 中的 Hugo 版本信息替换成自己对应的即可。 ","date":"2024-10-22","objectID":"/rebuild-my-blog/:3:2","series":["小站重生记"],"tags":["hugo","vercel","博客"],"title":"用 Hugo + Vercel 重建博客","uri":"/rebuild-my-blog/#22-部署-gitpage"},{"categories":["建站"],"content":" 3 VercelVercel 从 github 中同步并部署项目的功能十分方便。 在本地资源 push 到 github 仓库后，Vercel 会直接同步资源并且部署的速度非常快。 使用 github 账号登录 Vercel 或者注册 Vercel 账号再关联自己的 github 账号，然后点击 Add New... 从 github 仓库中导入部署到 Gitpage 的博客。 Vercel 中导入对应 github 项目 选择 Hugo 框架 导入后，Vercel 中的项目和选择的 github 仓库就连接在一起了，只要本地 commit 一次，Vercel 中的项目也会重新部署一次。 并且每一个托管的项目都会给一个独立的 url 连接，这样方便自己的域名解析。 ","date":"2024-10-22","objectID":"/rebuild-my-blog/:4:0","series":["小站重生记"],"tags":["hugo","vercel","博客"],"title":"用 Hugo + Vercel 重建博客","uri":"/rebuild-my-blog/#3-vercel"},{"categories":["建站"],"content":" 4 小结本来是打算写一段配置 Cloudflare 的过程的。但是这段过程其实挺魔幻的，还多亏了我的室友。 这一段经历以及在配置博客的过程中遇到的一些问题打算还是另起文章来记录 OvO。 ","date":"2024-10-22","objectID":"/rebuild-my-blog/:5:0","series":["小站重生记"],"tags":["hugo","vercel","博客"],"title":"用 Hugo + Vercel 重建博客","uri":"/rebuild-my-blog/#4-小结"}]